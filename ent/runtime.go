// Code generated by ent, DO NOT EDIT.

package ent

import (
	"cyclic/ent/link"
	"cyclic/ent/plan"
	"cyclic/ent/schema"
	"cyclic/ent/subscribe"
	"cyclic/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	linkFields := schema.Link{}.Fields()
	_ = linkFields
	// linkDescID is the schema descriptor for id field.
	linkDescID := linkFields[0].Descriptor()
	// link.DefaultID holds the default value on creation for the id field.
	link.DefaultID = linkDescID.Default.(func() uuid.UUID)
	planFields := schema.Plan{}.Fields()
	_ = planFields
	// planDescCreatedAt is the schema descriptor for created_at field.
	planDescCreatedAt := planFields[8].Descriptor()
	// plan.DefaultCreatedAt holds the default value on creation for the created_at field.
	plan.DefaultCreatedAt = planDescCreatedAt.Default.(func() time.Time)
	// planDescUpdatedAt is the schema descriptor for updated_at field.
	planDescUpdatedAt := planFields[9].Descriptor()
	// plan.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	plan.DefaultUpdatedAt = planDescUpdatedAt.Default.(func() time.Time)
	// plan.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	plan.UpdateDefaultUpdatedAt = planDescUpdatedAt.UpdateDefault.(func() time.Time)
	// planDescID is the schema descriptor for id field.
	planDescID := planFields[0].Descriptor()
	// plan.DefaultID holds the default value on creation for the id field.
	plan.DefaultID = planDescID.Default.(func() uuid.UUID)
	subscribeFields := schema.Subscribe{}.Fields()
	_ = subscribeFields
	// subscribeDescSubscribedAt is the schema descriptor for subscribed_at field.
	subscribeDescSubscribedAt := subscribeFields[1].Descriptor()
	// subscribe.DefaultSubscribedAt holds the default value on creation for the subscribed_at field.
	subscribe.DefaultSubscribedAt = subscribeDescSubscribedAt.Default.(func() time.Time)
	// subscribeDescID is the schema descriptor for id field.
	subscribeDescID := subscribeFields[0].Descriptor()
	// subscribe.DefaultID holds the default value on creation for the id field.
	subscribe.DefaultID = subscribeDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[4].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescRole is the schema descriptor for role field.
	userDescRole := userFields[5].Descriptor()
	// user.DefaultRole holds the default value on creation for the role field.
	user.DefaultRole = userDescRole.Default.(string)
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[6].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
